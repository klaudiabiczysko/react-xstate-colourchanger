{"ast":null,"code":"import _objectSpread from\"/mnt/c/Users/Acer/Desktop/LANGUAGE-TECHNOLOGY/Dialogue-Systems/assignment2/code/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{send,assign}from\"xstate\";const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl='https://dmappointment.herokuapp.com/model/parse';const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'http://maraev.me'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}function promptAndAsk(prompt){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:send('LISTEN')}}};}const grammar={\"John\":{person:\"John Appleseed\"},\"Julia\":{person:\"Julia Harvees\"},\"Victoria\":{person:\"Victoria Bloom\"},\"on Monday\":{day:\"Monday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Friday\":{day:\"Friday\"},\"on Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"Monday\":{day:\"Monday\"},\"Tuesday\":{day:\"Tuesday\"},\"Wednesday\":{day:\"Wednesday\"},\"Thursday\":{day:\"Thursday\"},\"Friday\":{day:\"Friday\"},\"Saturday\":{day:\"Saturday\"},\"Sunday\":{day:\"Sunday\"},\"at 5\":{time:\"5:00\"},\"5\":{time:\"5:00\"},\"at 5 p.m.\":{time:\"5:00 p.m.\"},\"at 6\":{time:\"6:00\"},\"6\":{time:\"6:00\"},\"at 6 p.m.\":{time:\"6:00 p.m.\"},\"at 7\":{time:\"7:00\"},\"7\":{time:\"7:00\"},\"at 7 p.m.\":{time:\"7:00 p.m.\"},\"at 8\":{time:\"8:00\"},\"8\":{time:\"8:00\"},\"at 10\":{time:\"10:00\"},\"10\":{time:\"10:00\"},\"at 9\":{time:\"9:00\"},\"9\":{time:\"9:00\"},\"at 11\":{time:\"11:00\"},\"11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"12\":{time:\"12:00\"},\"at 13\":{time:\"1:00 p.m.\"},\"at 14\":{time:\"2:00 p.m.\"},\"at 15\":{time:\"3:00 p.m.\"},\"at 16\":{time:\"4:00 p.m.\"}};const booleanGrammar={\"yes\":{bool:true},\"yep\":{bool:true},\"of course\":{bool:true},\"sure\":{bool:true},\"I want to\":{bool:true},\"no\":{bool:false},\"no way\":{bool:false},\"hell no\":{bool:false},\"nope\":{bool:false}};export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:_objectSpread({id:\"start\",on:{RECOGNISED:{target:'query',actions:assign(context=>{return{activity:context.recResult};})}}},promptAndAsk(\"What would you like to do? You can choose appointment, to do item or timer.\")),query:{invoke:{id:'rasa',src:(context,event)=>nluRequest(context.activity),onDone:{target:'processer',actions:[assign((context,event)=>{return{activity:event.data.intent.name};}),(context,event)=>console.log(event.data)]},onError:{target:'welcome',actions:(context,event)=>console.log(event.data)}}},processer:{initial:\"prompt\",on:{ENDSPEECH:[{target:'todo_item',cond:context=>context.activity==='todo_item'},{target:'timer',cond:context=>context.activity==='timer'},{target:'appointment',cond:context=>context.activity==='appointment'},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK\"}))},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"#start\"}}}},todo_item:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Welcome to To do item\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Welcome to timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:say(\"Let's create an appointment\")}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{day:grammar[context.recResult].day};}),target:\"wholeday\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>booleanGrammar[context.recResult].bool===false,target:\"time\"},{cond:context=>booleanGrammar[context.recResult].bool===true,target:\"whole_day_confirmation\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\" on \").concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{time:grammar[context.recResult].time};}),target:\"time_confirmation\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\" on \").concat(context.day,\". What time is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},whole_day_confirmation:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>booleanGrammar[context.recResult].bool===false,target:\"init\"},{cond:context=>booleanGrammar[context.recResult].bool===true,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},time_confirmation:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>booleanGrammar[context.recResult].bool===false,target:\"who\"},{cond:context=>booleanGrammar[context.recResult].bool===true,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirmed:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Your appointment has been created!\"}))}}}}};","map":{"version":3,"sources":["/mnt/c/Users/Acer/Desktop/LANGUAGE-TECHNOLOGY/Dialogue-Systems/assignment2/code/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","proxyurl","rasaurl","nluRequest","text","fetch","Request","method","headers","body","then","data","json","say","_context","type","value","listen","promptAndAsk","prompt","initial","states","entry","on","ENDSPEECH","ask","grammar","person","day","time","booleanGrammar","bool","dmMachine","init","CLICK","welcome","id","RECOGNISED","target","actions","context","activity","recResult","query","invoke","src","event","onDone","intent","name","console","log","onError","processer","cond","nomatch","todo_item","timer","appointment","who","wholeday","whole_day_confirmation","time_confirmation","confirmed"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://dmappointment.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nfunction promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n\tinitial: 'prompt',\n\tstates: {\n            prompt: {\n\t\tentry: say(prompt),\n\t\ton: { ENDSPEECH: 'ask' }\n            },\n            ask: {\n\t\tentry: send('LISTEN'),\n            },\n\t}})\n}\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } } = {\n    \"John\": { person: \"John Appleseed\" },\n    \"Julia\": { person: \"Julia Harvees\" },\n    \"Victoria\": {person: \"Victoria Bloom\"},\n    \"on Monday\": { day: \"Monday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"on Friday\": { day: \"Friday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n    \"Monday\": { day: \"Monday\" },\n    \"Tuesday\": { day: \"Tuesday\" },\n    \"Wednesday\": { day: \"Wednesday\" },\n    \"Thursday\": { day: \"Thursday\" },\n    \"Friday\": { day: \"Friday\" },\n    \"Saturday\": { day: \"Saturday\" },\n    \"Sunday\": { day: \"Sunday\" },\n    \"at 5\": { time: \"5:00\"},\n    \"5\": { time: \"5:00\"},\n    \"at 5 p.m.\": {time: \"5:00 p.m.\"},\n    \"at 6\": { time: \"6:00\"},\n    \"6\": { time: \"6:00\"},\n    \"at 6 p.m.\": { time: \"6:00 p.m.\"},\n    \"at 7\": { time: \"7:00\"},\n    \"7\": { time: \"7:00\"},\n    \"at 7 p.m.\": { time: \"7:00 p.m.\"},\n    \"at 8\": { time: \"8:00\"},\n    \"8\": { time: \"8:00\"},\n    \"at 10\": { time: \"10:00\" },\n    \"10\": { time: \"10:00\" },\n    \"at 9\": { time: \"9:00\" },\n    \"9\": { time: \"9:00\" },\n    \"at 11\": {time: \"11:00\"},\n    \"11\": {time: \"11:00\"},\n    \"at 12\": { time: \"12:00\"},\n    \"12\": { time: \"12:00\"},\n    \"at 13\": { time: \"1:00 p.m.\"},\n    \"at 14\": { time: \"2:00 p.m.\"},\n    \"at 15\": { time: \"3:00 p.m.\"},\n    \"at 16\": { time: \"4:00 p.m.\"},\n\n}\n\nconst booleanGrammar: { [index: string]: {bool?: boolean}} = {\n    \"yes\": { bool: true },\n    \"yep\": { bool: true },\n    \"of course\": { bool: true },\n    \"sure\": { bool: true },\n    \"I want to\": { bool: true },\n    \"no\": { bool: false },\n    \"no way\": { bool: false },\n    \"hell no\": { bool: false },\n    \"nope\": { bool: false },\n}\n\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n\twelcome: {\n        id: \"start\",\n\t    on: {\n\t\tRECOGNISED: {\n\t\t    target: 'query',\n\t\t    actions: assign((context) => { return { activity: context.recResult } }),\n                }\n            },\n\t    ...promptAndAsk(\"What would you like to do? You can choose appointment, to do item or timer.\")\n\t},\n    \tquery: {\n\t    invoke: {\n\t\tid: 'rasa',\n                src: (context, event) => nluRequest(context.activity),\n                onDone: {\n                    target: 'processer',\n                    actions: [assign((context, event) => { return {activity: event.data.intent.name }}),\n\t\t\t      (context:SDSContext, event:any) => console.log(event.data)]\n                },\n\t\tonError: {\n                    target: 'welcome',\n\t\t    actions: (context,event) => console.log(event.data)\n                }\n            }\n\t},\n    processer: {\n        initial: \"prompt\",\n        on: {\n            ENDSPEECH: [\n                { target: 'todo_item', cond: (context) => context.activity === 'todo_item' },\n                { target: 'timer', cond: (context) => context.activity === 'timer' },\n                { target: 'appointment', cond: (context) => context.activity === 'appointment' }, \n                { target: \".nomatch\" } ]\n        },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `OK`\n                \n                })),\n    },\n            nomatch: {\n                entry: say(\"Sorry, I don't understand\"),\n                on: { ENDSPEECH: \"#start\" }\n    } \n}\n    },\n    todo_item: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Welcome to To do item`\n                }))\n            },\n    }\n    },\n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Welcome to timer`\n                    }))\n                },\n\t\t}\n\t\t},\n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: { entry: say(\"Let's create an appointment\") }\n            }\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on:{\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t    }\n\t  }\n        },\n\twholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (booleanGrammar[context.recResult].bool === false),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (booleanGrammar[context.recResult].bool === true),\n\t\ttarget: \"whole_day_confirmation\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n\ttime: {\n            initial: \"prompt\",\n            on: { RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"time_confirmation\"\n                },\n                { target: \".nomatch\" }]\n\t\t},\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. What time is your meeting?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n        },\n\twhole_day_confirmation: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (booleanGrammar[context.recResult].bool === false),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (booleanGrammar[context.recResult].bool === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n \ttime_confirmation: {\n            initial: \"prompt\",\n            on:  {\n                RECOGNISED: [{cond: (context) => (booleanGrammar[context.recResult].bool === false),\n                    target: \"who\"\n                },\n\t\t{cond: (context) => (booleanGrammar[context.recResult].bool === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                   entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                },\n            },\n\t    confirmed: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Your appointment has been created!`\n                    }))\n                },\n\t\t}\n\t\t}\n        }})"]},"metadata":{},"sourceType":"module"}